#include <iostream> 
#include <string #include <queue> using namespace std; 
// Create a Comparison Class for our 
// integer priority queue class CompareClass { 
    public         bool operator () (int a, int b) { 
            if (a <= b)                 return true             return false; 
        } 
}; 
void print_pqueue (priority_queue<int, vector<int>, CompareClass> pq) { 
    // Prints the Priority Queu     priority_queue<int, vector<int>, CompareClass> copy_q = pq;     cout << "Priority Queue : "; 
    while (!copy_q.empty()) {         cout << copy_q.top() << " ";         copy_q.pop(); 
    } 
    cout << "\n" 
} 
int main() { 
    // Program demonstrating use of Priority Queue 
    // methods 
    // Create an empty priority queue of integer     priority_queue<int, vector<int>, CompareClass> queue_int; 
    // Is the Queue empty now? Yes!     cout << "Is the Queue empty now? : " << (queue_int.empty() ? "Yes" : "No") << endl; 
    // Let's add some elements!     cout << "Enter number of elements to add...\n";     int number,ele;     cin >> number;     for(int i = 0; i < number; i++) 
    { 
        cout <<"\n Enter Element : "; 
        cin >> ele 
        queue_int.push(ele); 
    } 
    cout << "Number of elements : " << queue_int.size() << endl     cout << "Top element : " << queue_int.top() << endl << endl     print_pqueue(queue_int);     cout << "Popping element from the top...\n\n";     queue_int.pop();     print_pqueue(queue_int); 
return 0; 
} 
